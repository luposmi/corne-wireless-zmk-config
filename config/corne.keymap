/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        caps {
            bindings = <&caps_word>;
            key-positions = <17 18>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <37 40>;
        };

        left_alt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <37 38>;
        };

        lol_ctrl {
            bindings = <&kp LCTRL>;
            key-positions = <37 29>;
            layers = <1>;
        };

        shiftctrl {
            bindings = <&kp LS(LCTRL)>;
            key-positions = <14 15>;
        };

        shiftctrl2 {
            bindings = <&kp LS(LCTRL)>;
            key-positions = <20 21>;
        };

        double_colon {
            bindings = <&double_colon>;
            key-positions = <38 39>;
            layers = <0>;
        };
    };

    behaviors {
        hrl: home_row_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            flavor = "tap-unless-interrupted";
            quick-tap-ms = <200>;
        };

        hrr: home_row_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            quick-tap-ms = <200>;
            flavor = "tap-unless-interrupted";
        };
    };

    macros {
        double_colon: double_colon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp COLON>;
            label = "DOUBLE_COLON";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB        &kp Q  &kp W         &kp E              &kp R  &kp T        &kp Y          &kp U  &kp I               &kp O         &kp P     &kp RA(LBKT)
&kp ESCAPE     &kp A  &hrl LCTRL S  &hrl LEFT_SHIFT D  &kp F  &kp G        &kp H          &kp J  &hrr RIGHT_SHIFT K  &hrr RCTRL L  &kp SEMI  &kp RA(SEMICOLON)
&kp RA(MINUS)  &kp Z  &kp X         &kp C              &kp V  &kp B        &kp N          &kp M  &kp COMMA           &kp DOT       &kp FSLH  &kp RA(SQT)
                                    &kp RALT           &mo 2  &kp SPACE    &kp BACKSPACE  &mo 3  &kp LGUI
            >;
        };

        gaming {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E   &kp R  &kp T     &kp Y   &kp U  &kp I      &kp O    &kp P     &trans
&kp ESC    &kp A  &kp S  &kp D   &kp F  &kp G     &kp H   &kp J  &kp K      &kp L    &kp SEMI  &trans
&kp LSHFT  &kp Z  &kp X  &kp C   &kp V  &kp B     &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH  &trans
                         &trans  &mo 2  &trans    &trans  &mo 3  &trans
            >;
        };

        left {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp F1      &kp F2             &kp F3               &kp F4              &kp F5     &kp F6    &kp F7         &kp F8          &kp F9               &kp F10           &kp F11     &kp F12
&kp ESC     &kp N1             &hrl LCTRL NUMBER_2  &hrl LEFT_SHIFT N3  &kp N4     &kp N5    &kp N6         &kp N7          &hrr RIGHT_SHIFT N8  &hrr RCTRL N9     &kp N0      &kp PAGE_UP
&kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP      &kp LEFT            &kp RIGHT  &trans    &sk LA(LCTRL)  &kp DOWN_ARROW  &kp UP_ARROW         &kp C_PLAY_PAUSE  &kp C_STOP  &kp PAGE_DOWN
                                                    &trans              &none      &trans    &trans         &kp ENTER       &trans
            >;
        };

        right {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TAB            &kp EXCL       &kp AT     &kp HASH        &kp DLLR         &kp PRCNT           &kp CARET          &kp AMPS          &kp STAR           &kp LPAR        &kp RPAR   &tog 1
&kp ESC            &kp EQUAL      &kp MINUS  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp SINGLE_QUOTE    &kp DOUBLE_QUOTES  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp UNDERSCORE  &kp PLUS   &kp DEL
&kp RS(RA(EQUAL))  &kp BACKSLASH  &kp PIPE   &kp LEFT        &kp RIGHT        &double_colon       &trans             &kp DOWN          &kp UP             &kp TILDE       &kp GRAVE  &kp INSERT
                                             &trans          &kp ENTER        &trans              &trans             &none             &trans
            >;
        };

        AltGr {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
